// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dt_courant
void dt_courant(Rcpp::DataFrame hillslope, Rcpp::NumericMatrix courant, double timestep, int n_sub_step);
RcppExport SEXP _dynatop_dt_courant(SEXP hillslopeSEXP, SEXP courantSEXP, SEXP timestepSEXP, SEXP n_sub_stepSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type hillslope(hillslopeSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type courant(courantSEXP);
    Rcpp::traits::input_parameter< double >::type timestep(timestepSEXP);
    Rcpp::traits::input_parameter< int >::type n_sub_step(n_sub_stepSEXP);
    dt_courant(hillslope, courant, timestep, n_sub_step);
    return R_NilValue;
END_RCPP
}
// dt_implicit_sim
void dt_implicit_sim(Rcpp::DataFrame hillslope, Rcpp::DataFrame channel, Rcpp::DataFrame flow_direction, Rcpp::DataFrame precip_input, Rcpp::DataFrame pet_input, Rcpp::NumericMatrix obs, Rcpp::NumericMatrix channel_inflow_sf, Rcpp::NumericMatrix channel_inflow_sz, Rcpp::NumericMatrix mass_balance, std::vector<bool> keep_states, Rcpp::List state_rec, double timestep, int n_sub_step, double tol, int max_it, double ftol);
RcppExport SEXP _dynatop_dt_implicit_sim(SEXP hillslopeSEXP, SEXP channelSEXP, SEXP flow_directionSEXP, SEXP precip_inputSEXP, SEXP pet_inputSEXP, SEXP obsSEXP, SEXP channel_inflow_sfSEXP, SEXP channel_inflow_szSEXP, SEXP mass_balanceSEXP, SEXP keep_statesSEXP, SEXP state_recSEXP, SEXP timestepSEXP, SEXP n_sub_stepSEXP, SEXP tolSEXP, SEXP max_itSEXP, SEXP ftolSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type hillslope(hillslopeSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type channel(channelSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type flow_direction(flow_directionSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type precip_input(precip_inputSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type pet_input(pet_inputSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type channel_inflow_sf(channel_inflow_sfSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type channel_inflow_sz(channel_inflow_szSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type mass_balance(mass_balanceSEXP);
    Rcpp::traits::input_parameter< std::vector<bool> >::type keep_states(keep_statesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type state_rec(state_recSEXP);
    Rcpp::traits::input_parameter< double >::type timestep(timestepSEXP);
    Rcpp::traits::input_parameter< int >::type n_sub_step(n_sub_stepSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type max_it(max_itSEXP);
    Rcpp::traits::input_parameter< double >::type ftol(ftolSEXP);
    dt_implicit_sim(hillslope, channel, flow_direction, precip_input, pet_input, obs, channel_inflow_sf, channel_inflow_sz, mass_balance, keep_states, state_rec, timestep, n_sub_step, tol, max_it, ftol);
    return R_NilValue;
END_RCPP
}
// dt_init
void dt_init(Rcpp::DataFrame hillslope, Rcpp::DataFrame channel, Rcpp::DataFrame flow_direction, double tol, int max_it);
RcppExport SEXP _dynatop_dt_init(SEXP hillslopeSEXP, SEXP channelSEXP, SEXP flow_directionSEXP, SEXP tolSEXP, SEXP max_itSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type hillslope(hillslopeSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type channel(channelSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type flow_direction(flow_directionSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type max_it(max_itSEXP);
    dt_init(hillslope, channel, flow_direction, tol, max_it);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dynatop_dt_courant", (DL_FUNC) &_dynatop_dt_courant, 4},
    {"_dynatop_dt_implicit_sim", (DL_FUNC) &_dynatop_dt_implicit_sim, 16},
    {"_dynatop_dt_init", (DL_FUNC) &_dynatop_dt_init, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_dynatop(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
